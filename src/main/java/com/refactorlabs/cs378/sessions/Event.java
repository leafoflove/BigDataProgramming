/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.refactorlabs.cs378.sessions;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Event extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Event\",\"namespace\":\"com.refactorlabs.cs378.sessions\",\"fields\":[{\"name\":\"event_type\",\"type\":{\"type\":\"enum\",\"name\":\"EventType\",\"symbols\":[\"CHANGE\",\"CLICK\",\"CONTACT_FORM_STATUS\",\"EDIT\",\"SHARE\",\"SHOW\",\"SUBMIT\",\"VISIT\"]}},{\"name\":\"event_subtype\",\"type\":[\"null\",{\"type\":\"enum\",\"name\":\"EventSubtype\",\"symbols\":[\"CONTACT_FORM_TYPE\",\"ALTERNATIVE\",\"CONTACT_BANNER\",\"CONTACT_BUTTON\",\"MARKET_REPORT\",\"DEALER_PHONE\",\"FEATURES_SECTION\",\"GET_DIRECTIONS\",\"SHOW_MORE_BADGES\",\"TEST_DRIVE_LINK\",\"VEHICLE_HISTORY_REPORT_LINK\",\"ERROR\",\"SUCCESS\",\"CONTACT_FORM\",\"BADGE_DETAIL\",\"PHOTO_MODAL\",\"ALTERNATIVES\",\"BADGES\",\"FEATURES\",\"VEHICLE_HISTORY\",\"MARKET_REPORT_LISTING\"]}],\"default\":null},{\"name\":\"body_style\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"cab_style\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"carfax_one_owner\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"city\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"drive_type\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"engine\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"engine_displacement\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"exterior_color\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"features\",\"type\":{\"type\":\"array\",\"items\":\"string\"}},{\"name\":\"fuel\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"initial_carfax_free_report\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"initial_cpo\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"interior_color\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"make\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"model\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"mpg\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"page\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"referring_domain\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"region\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"subtrim\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"transmission\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"trim\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"vehicle_condition\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"year\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"event_timestamp\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"image_count\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"initial_price\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"mileage\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"referrer\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"vin\",\"type\":\"string\",\"default\":\"\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public com.refactorlabs.cs378.sessions.EventType event_type;
  @Deprecated public com.refactorlabs.cs378.sessions.EventSubtype event_subtype;
  @Deprecated public java.lang.CharSequence body_style;
  @Deprecated public java.lang.CharSequence cab_style;
  @Deprecated public java.lang.CharSequence carfax_one_owner;
  @Deprecated public java.lang.CharSequence city;
  @Deprecated public java.lang.CharSequence drive_type;
  @Deprecated public java.lang.CharSequence engine;
  @Deprecated public java.lang.CharSequence engine_displacement;
  @Deprecated public java.lang.CharSequence exterior_color;
  @Deprecated public java.util.List<java.lang.CharSequence> features;
  @Deprecated public java.lang.CharSequence fuel;
  @Deprecated public java.lang.CharSequence initial_carfax_free_report;
  @Deprecated public java.lang.CharSequence initial_cpo;
  @Deprecated public java.lang.CharSequence interior_color;
  @Deprecated public java.lang.CharSequence make;
  @Deprecated public java.lang.CharSequence model;
  @Deprecated public java.lang.CharSequence mpg;
  @Deprecated public java.lang.CharSequence page;
  @Deprecated public java.lang.CharSequence referring_domain;
  @Deprecated public java.lang.CharSequence region;
  @Deprecated public java.lang.CharSequence subtrim;
  @Deprecated public java.lang.CharSequence transmission;
  @Deprecated public java.lang.CharSequence trim;
  @Deprecated public java.lang.CharSequence vehicle_condition;
  @Deprecated public java.lang.CharSequence year;
  @Deprecated public java.lang.CharSequence event_timestamp;
  @Deprecated public java.lang.CharSequence image_count;
  @Deprecated public java.lang.CharSequence initial_price;
  @Deprecated public java.lang.CharSequence mileage;
  @Deprecated public java.lang.CharSequence referrer;
  @Deprecated public java.lang.CharSequence vin;

  /**
   * Default constructor.
   */
  public Event() {}

  /**
   * All-args constructor.
   */
  public Event(com.refactorlabs.cs378.sessions.EventType event_type, com.refactorlabs.cs378.sessions.EventSubtype event_subtype, java.lang.CharSequence body_style, java.lang.CharSequence cab_style, java.lang.CharSequence carfax_one_owner, java.lang.CharSequence city, java.lang.CharSequence drive_type, java.lang.CharSequence engine, java.lang.CharSequence engine_displacement, java.lang.CharSequence exterior_color, java.util.List<java.lang.CharSequence> features, java.lang.CharSequence fuel, java.lang.CharSequence initial_carfax_free_report, java.lang.CharSequence initial_cpo, java.lang.CharSequence interior_color, java.lang.CharSequence make, java.lang.CharSequence model, java.lang.CharSequence mpg, java.lang.CharSequence page, java.lang.CharSequence referring_domain, java.lang.CharSequence region, java.lang.CharSequence subtrim, java.lang.CharSequence transmission, java.lang.CharSequence trim, java.lang.CharSequence vehicle_condition, java.lang.CharSequence year, java.lang.CharSequence event_timestamp, java.lang.CharSequence image_count, java.lang.CharSequence initial_price, java.lang.CharSequence mileage, java.lang.CharSequence referrer, java.lang.CharSequence vin) {
    this.event_type = event_type;
    this.event_subtype = event_subtype;
    this.body_style = body_style;
    this.cab_style = cab_style;
    this.carfax_one_owner = carfax_one_owner;
    this.city = city;
    this.drive_type = drive_type;
    this.engine = engine;
    this.engine_displacement = engine_displacement;
    this.exterior_color = exterior_color;
    this.features = features;
    this.fuel = fuel;
    this.initial_carfax_free_report = initial_carfax_free_report;
    this.initial_cpo = initial_cpo;
    this.interior_color = interior_color;
    this.make = make;
    this.model = model;
    this.mpg = mpg;
    this.page = page;
    this.referring_domain = referring_domain;
    this.region = region;
    this.subtrim = subtrim;
    this.transmission = transmission;
    this.trim = trim;
    this.vehicle_condition = vehicle_condition;
    this.year = year;
    this.event_timestamp = event_timestamp;
    this.image_count = image_count;
    this.initial_price = initial_price;
    this.mileage = mileage;
    this.referrer = referrer;
    this.vin = vin;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return event_type;
    case 1: return event_subtype;
    case 2: return body_style;
    case 3: return cab_style;
    case 4: return carfax_one_owner;
    case 5: return city;
    case 6: return drive_type;
    case 7: return engine;
    case 8: return engine_displacement;
    case 9: return exterior_color;
    case 10: return features;
    case 11: return fuel;
    case 12: return initial_carfax_free_report;
    case 13: return initial_cpo;
    case 14: return interior_color;
    case 15: return make;
    case 16: return model;
    case 17: return mpg;
    case 18: return page;
    case 19: return referring_domain;
    case 20: return region;
    case 21: return subtrim;
    case 22: return transmission;
    case 23: return trim;
    case 24: return vehicle_condition;
    case 25: return year;
    case 26: return event_timestamp;
    case 27: return image_count;
    case 28: return initial_price;
    case 29: return mileage;
    case 30: return referrer;
    case 31: return vin;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: event_type = (com.refactorlabs.cs378.sessions.EventType)value$; break;
    case 1: event_subtype = (com.refactorlabs.cs378.sessions.EventSubtype)value$; break;
    case 2: body_style = (java.lang.CharSequence)value$; break;
    case 3: cab_style = (java.lang.CharSequence)value$; break;
    case 4: carfax_one_owner = (java.lang.CharSequence)value$; break;
    case 5: city = (java.lang.CharSequence)value$; break;
    case 6: drive_type = (java.lang.CharSequence)value$; break;
    case 7: engine = (java.lang.CharSequence)value$; break;
    case 8: engine_displacement = (java.lang.CharSequence)value$; break;
    case 9: exterior_color = (java.lang.CharSequence)value$; break;
    case 10: features = (java.util.List<java.lang.CharSequence>)value$; break;
    case 11: fuel = (java.lang.CharSequence)value$; break;
    case 12: initial_carfax_free_report = (java.lang.CharSequence)value$; break;
    case 13: initial_cpo = (java.lang.CharSequence)value$; break;
    case 14: interior_color = (java.lang.CharSequence)value$; break;
    case 15: make = (java.lang.CharSequence)value$; break;
    case 16: model = (java.lang.CharSequence)value$; break;
    case 17: mpg = (java.lang.CharSequence)value$; break;
    case 18: page = (java.lang.CharSequence)value$; break;
    case 19: referring_domain = (java.lang.CharSequence)value$; break;
    case 20: region = (java.lang.CharSequence)value$; break;
    case 21: subtrim = (java.lang.CharSequence)value$; break;
    case 22: transmission = (java.lang.CharSequence)value$; break;
    case 23: trim = (java.lang.CharSequence)value$; break;
    case 24: vehicle_condition = (java.lang.CharSequence)value$; break;
    case 25: year = (java.lang.CharSequence)value$; break;
    case 26: event_timestamp = (java.lang.CharSequence)value$; break;
    case 27: image_count = (java.lang.CharSequence)value$; break;
    case 28: initial_price = (java.lang.CharSequence)value$; break;
    case 29: mileage = (java.lang.CharSequence)value$; break;
    case 30: referrer = (java.lang.CharSequence)value$; break;
    case 31: vin = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'event_type' field.
   */
  public com.refactorlabs.cs378.sessions.EventType getEventType() {
    return event_type;
  }

  /**
   * Sets the value of the 'event_type' field.
   * @param value the value to set.
   */
  public void setEventType(com.refactorlabs.cs378.sessions.EventType value) {
    this.event_type = value;
  }

  /**
   * Gets the value of the 'event_subtype' field.
   */
  public com.refactorlabs.cs378.sessions.EventSubtype getEventSubtype() {
    return event_subtype;
  }

  /**
   * Sets the value of the 'event_subtype' field.
   * @param value the value to set.
   */
  public void setEventSubtype(com.refactorlabs.cs378.sessions.EventSubtype value) {
    this.event_subtype = value;
  }

  /**
   * Gets the value of the 'body_style' field.
   */
  public java.lang.CharSequence getBodyStyle() {
    return body_style;
  }

  /**
   * Sets the value of the 'body_style' field.
   * @param value the value to set.
   */
  public void setBodyStyle(java.lang.CharSequence value) {
    this.body_style = value;
  }

  /**
   * Gets the value of the 'cab_style' field.
   */
  public java.lang.CharSequence getCabStyle() {
    return cab_style;
  }

  /**
   * Sets the value of the 'cab_style' field.
   * @param value the value to set.
   */
  public void setCabStyle(java.lang.CharSequence value) {
    this.cab_style = value;
  }

  /**
   * Gets the value of the 'carfax_one_owner' field.
   */
  public java.lang.CharSequence getCarfaxOneOwner() {
    return carfax_one_owner;
  }

  /**
   * Sets the value of the 'carfax_one_owner' field.
   * @param value the value to set.
   */
  public void setCarfaxOneOwner(java.lang.CharSequence value) {
    this.carfax_one_owner = value;
  }

  /**
   * Gets the value of the 'city' field.
   */
  public java.lang.CharSequence getCity() {
    return city;
  }

  /**
   * Sets the value of the 'city' field.
   * @param value the value to set.
   */
  public void setCity(java.lang.CharSequence value) {
    this.city = value;
  }

  /**
   * Gets the value of the 'drive_type' field.
   */
  public java.lang.CharSequence getDriveType() {
    return drive_type;
  }

  /**
   * Sets the value of the 'drive_type' field.
   * @param value the value to set.
   */
  public void setDriveType(java.lang.CharSequence value) {
    this.drive_type = value;
  }

  /**
   * Gets the value of the 'engine' field.
   */
  public java.lang.CharSequence getEngine() {
    return engine;
  }

  /**
   * Sets the value of the 'engine' field.
   * @param value the value to set.
   */
  public void setEngine(java.lang.CharSequence value) {
    this.engine = value;
  }

  /**
   * Gets the value of the 'engine_displacement' field.
   */
  public java.lang.CharSequence getEngineDisplacement() {
    return engine_displacement;
  }

  /**
   * Sets the value of the 'engine_displacement' field.
   * @param value the value to set.
   */
  public void setEngineDisplacement(java.lang.CharSequence value) {
    this.engine_displacement = value;
  }

  /**
   * Gets the value of the 'exterior_color' field.
   */
  public java.lang.CharSequence getExteriorColor() {
    return exterior_color;
  }

  /**
   * Sets the value of the 'exterior_color' field.
   * @param value the value to set.
   */
  public void setExteriorColor(java.lang.CharSequence value) {
    this.exterior_color = value;
  }

  /**
   * Gets the value of the 'features' field.
   */
  public java.util.List<java.lang.CharSequence> getFeatures() {
    return features;
  }

  /**
   * Sets the value of the 'features' field.
   * @param value the value to set.
   */
  public void setFeatures(java.util.List<java.lang.CharSequence> value) {
    this.features = value;
  }

  /**
   * Gets the value of the 'fuel' field.
   */
  public java.lang.CharSequence getFuel() {
    return fuel;
  }

  /**
   * Sets the value of the 'fuel' field.
   * @param value the value to set.
   */
  public void setFuel(java.lang.CharSequence value) {
    this.fuel = value;
  }

  /**
   * Gets the value of the 'initial_carfax_free_report' field.
   */
  public java.lang.CharSequence getInitialCarfaxFreeReport() {
    return initial_carfax_free_report;
  }

  /**
   * Sets the value of the 'initial_carfax_free_report' field.
   * @param value the value to set.
   */
  public void setInitialCarfaxFreeReport(java.lang.CharSequence value) {
    this.initial_carfax_free_report = value;
  }

  /**
   * Gets the value of the 'initial_cpo' field.
   */
  public java.lang.CharSequence getInitialCpo() {
    return initial_cpo;
  }

  /**
   * Sets the value of the 'initial_cpo' field.
   * @param value the value to set.
   */
  public void setInitialCpo(java.lang.CharSequence value) {
    this.initial_cpo = value;
  }

  /**
   * Gets the value of the 'interior_color' field.
   */
  public java.lang.CharSequence getInteriorColor() {
    return interior_color;
  }

  /**
   * Sets the value of the 'interior_color' field.
   * @param value the value to set.
   */
  public void setInteriorColor(java.lang.CharSequence value) {
    this.interior_color = value;
  }

  /**
   * Gets the value of the 'make' field.
   */
  public java.lang.CharSequence getMake() {
    return make;
  }

  /**
   * Sets the value of the 'make' field.
   * @param value the value to set.
   */
  public void setMake(java.lang.CharSequence value) {
    this.make = value;
  }

  /**
   * Gets the value of the 'model' field.
   */
  public java.lang.CharSequence getModel() {
    return model;
  }

  /**
   * Sets the value of the 'model' field.
   * @param value the value to set.
   */
  public void setModel(java.lang.CharSequence value) {
    this.model = value;
  }

  /**
   * Gets the value of the 'mpg' field.
   */
  public java.lang.CharSequence getMpg() {
    return mpg;
  }

  /**
   * Sets the value of the 'mpg' field.
   * @param value the value to set.
   */
  public void setMpg(java.lang.CharSequence value) {
    this.mpg = value;
  }

  /**
   * Gets the value of the 'page' field.
   */
  public java.lang.CharSequence getPage() {
    return page;
  }

  /**
   * Sets the value of the 'page' field.
   * @param value the value to set.
   */
  public void setPage(java.lang.CharSequence value) {
    this.page = value;
  }

  /**
   * Gets the value of the 'referring_domain' field.
   */
  public java.lang.CharSequence getReferringDomain() {
    return referring_domain;
  }

  /**
   * Sets the value of the 'referring_domain' field.
   * @param value the value to set.
   */
  public void setReferringDomain(java.lang.CharSequence value) {
    this.referring_domain = value;
  }

  /**
   * Gets the value of the 'region' field.
   */
  public java.lang.CharSequence getRegion() {
    return region;
  }

  /**
   * Sets the value of the 'region' field.
   * @param value the value to set.
   */
  public void setRegion(java.lang.CharSequence value) {
    this.region = value;
  }

  /**
   * Gets the value of the 'subtrim' field.
   */
  public java.lang.CharSequence getSubtrim() {
    return subtrim;
  }

  /**
   * Sets the value of the 'subtrim' field.
   * @param value the value to set.
   */
  public void setSubtrim(java.lang.CharSequence value) {
    this.subtrim = value;
  }

  /**
   * Gets the value of the 'transmission' field.
   */
  public java.lang.CharSequence getTransmission() {
    return transmission;
  }

  /**
   * Sets the value of the 'transmission' field.
   * @param value the value to set.
   */
  public void setTransmission(java.lang.CharSequence value) {
    this.transmission = value;
  }

  /**
   * Gets the value of the 'trim' field.
   */
  public java.lang.CharSequence getTrim() {
    return trim;
  }

  /**
   * Sets the value of the 'trim' field.
   * @param value the value to set.
   */
  public void setTrim(java.lang.CharSequence value) {
    this.trim = value;
  }

  /**
   * Gets the value of the 'vehicle_condition' field.
   */
  public java.lang.CharSequence getVehicleCondition() {
    return vehicle_condition;
  }

  /**
   * Sets the value of the 'vehicle_condition' field.
   * @param value the value to set.
   */
  public void setVehicleCondition(java.lang.CharSequence value) {
    this.vehicle_condition = value;
  }

  /**
   * Gets the value of the 'year' field.
   */
  public java.lang.CharSequence getYear() {
    return year;
  }

  /**
   * Sets the value of the 'year' field.
   * @param value the value to set.
   */
  public void setYear(java.lang.CharSequence value) {
    this.year = value;
  }

  /**
   * Gets the value of the 'event_timestamp' field.
   */
  public java.lang.CharSequence getEventTimestamp() {
    return event_timestamp;
  }

  /**
   * Sets the value of the 'event_timestamp' field.
   * @param value the value to set.
   */
  public void setEventTimestamp(java.lang.CharSequence value) {
    this.event_timestamp = value;
  }

  /**
   * Gets the value of the 'image_count' field.
   */
  public java.lang.CharSequence getImageCount() {
    return image_count;
  }

  /**
   * Sets the value of the 'image_count' field.
   * @param value the value to set.
   */
  public void setImageCount(java.lang.CharSequence value) {
    this.image_count = value;
  }

  /**
   * Gets the value of the 'initial_price' field.
   */
  public java.lang.CharSequence getInitialPrice() {
    return initial_price;
  }

  /**
   * Sets the value of the 'initial_price' field.
   * @param value the value to set.
   */
  public void setInitialPrice(java.lang.CharSequence value) {
    this.initial_price = value;
  }

  /**
   * Gets the value of the 'mileage' field.
   */
  public java.lang.CharSequence getMileage() {
    return mileage;
  }

  /**
   * Sets the value of the 'mileage' field.
   * @param value the value to set.
   */
  public void setMileage(java.lang.CharSequence value) {
    this.mileage = value;
  }

  /**
   * Gets the value of the 'referrer' field.
   */
  public java.lang.CharSequence getReferrer() {
    return referrer;
  }

  /**
   * Sets the value of the 'referrer' field.
   * @param value the value to set.
   */
  public void setReferrer(java.lang.CharSequence value) {
    this.referrer = value;
  }

  /**
   * Gets the value of the 'vin' field.
   */
  public java.lang.CharSequence getVin() {
    return vin;
  }

  /**
   * Sets the value of the 'vin' field.
   * @param value the value to set.
   */
  public void setVin(java.lang.CharSequence value) {
    this.vin = value;
  }

  /** Creates a new Event RecordBuilder */
  public static com.refactorlabs.cs378.sessions.Event.Builder newBuilder() {
    return new com.refactorlabs.cs378.sessions.Event.Builder();
  }
  
  /** Creates a new Event RecordBuilder by copying an existing Builder */
  public static com.refactorlabs.cs378.sessions.Event.Builder newBuilder(com.refactorlabs.cs378.sessions.Event.Builder other) {
    return new com.refactorlabs.cs378.sessions.Event.Builder(other);
  }
  
  /** Creates a new Event RecordBuilder by copying an existing Event instance */
  public static com.refactorlabs.cs378.sessions.Event.Builder newBuilder(com.refactorlabs.cs378.sessions.Event other) {
    return new com.refactorlabs.cs378.sessions.Event.Builder(other);
  }
  
  /**
   * RecordBuilder for Event instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Event>
    implements org.apache.avro.data.RecordBuilder<Event> {

    private com.refactorlabs.cs378.sessions.EventType event_type;
    private com.refactorlabs.cs378.sessions.EventSubtype event_subtype;
    private java.lang.CharSequence body_style;
    private java.lang.CharSequence cab_style;
    private java.lang.CharSequence carfax_one_owner;
    private java.lang.CharSequence city;
    private java.lang.CharSequence drive_type;
    private java.lang.CharSequence engine;
    private java.lang.CharSequence engine_displacement;
    private java.lang.CharSequence exterior_color;
    private java.util.List<java.lang.CharSequence> features;
    private java.lang.CharSequence fuel;
    private java.lang.CharSequence initial_carfax_free_report;
    private java.lang.CharSequence initial_cpo;
    private java.lang.CharSequence interior_color;
    private java.lang.CharSequence make;
    private java.lang.CharSequence model;
    private java.lang.CharSequence mpg;
    private java.lang.CharSequence page;
    private java.lang.CharSequence referring_domain;
    private java.lang.CharSequence region;
    private java.lang.CharSequence subtrim;
    private java.lang.CharSequence transmission;
    private java.lang.CharSequence trim;
    private java.lang.CharSequence vehicle_condition;
    private java.lang.CharSequence year;
    private java.lang.CharSequence event_timestamp;
    private java.lang.CharSequence image_count;
    private java.lang.CharSequence initial_price;
    private java.lang.CharSequence mileage;
    private java.lang.CharSequence referrer;
    private java.lang.CharSequence vin;

    /** Creates a new Builder */
    private Builder() {
      super(com.refactorlabs.cs378.sessions.Event.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.refactorlabs.cs378.sessions.Event.Builder other) {
      super(other);
    }
    
    /** Creates a Builder by copying an existing Event instance */
    private Builder(com.refactorlabs.cs378.sessions.Event other) {
            super(com.refactorlabs.cs378.sessions.Event.SCHEMA$);
      if (isValidValue(fields()[0], other.event_type)) {
        this.event_type = data().deepCopy(fields()[0].schema(), other.event_type);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.event_subtype)) {
        this.event_subtype = data().deepCopy(fields()[1].schema(), other.event_subtype);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.body_style)) {
        this.body_style = data().deepCopy(fields()[2].schema(), other.body_style);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.cab_style)) {
        this.cab_style = data().deepCopy(fields()[3].schema(), other.cab_style);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.carfax_one_owner)) {
        this.carfax_one_owner = data().deepCopy(fields()[4].schema(), other.carfax_one_owner);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.city)) {
        this.city = data().deepCopy(fields()[5].schema(), other.city);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.drive_type)) {
        this.drive_type = data().deepCopy(fields()[6].schema(), other.drive_type);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.engine)) {
        this.engine = data().deepCopy(fields()[7].schema(), other.engine);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.engine_displacement)) {
        this.engine_displacement = data().deepCopy(fields()[8].schema(), other.engine_displacement);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.exterior_color)) {
        this.exterior_color = data().deepCopy(fields()[9].schema(), other.exterior_color);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.features)) {
        this.features = data().deepCopy(fields()[10].schema(), other.features);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.fuel)) {
        this.fuel = data().deepCopy(fields()[11].schema(), other.fuel);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.initial_carfax_free_report)) {
        this.initial_carfax_free_report = data().deepCopy(fields()[12].schema(), other.initial_carfax_free_report);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.initial_cpo)) {
        this.initial_cpo = data().deepCopy(fields()[13].schema(), other.initial_cpo);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.interior_color)) {
        this.interior_color = data().deepCopy(fields()[14].schema(), other.interior_color);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.make)) {
        this.make = data().deepCopy(fields()[15].schema(), other.make);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.model)) {
        this.model = data().deepCopy(fields()[16].schema(), other.model);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.mpg)) {
        this.mpg = data().deepCopy(fields()[17].schema(), other.mpg);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.page)) {
        this.page = data().deepCopy(fields()[18].schema(), other.page);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.referring_domain)) {
        this.referring_domain = data().deepCopy(fields()[19].schema(), other.referring_domain);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.region)) {
        this.region = data().deepCopy(fields()[20].schema(), other.region);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.subtrim)) {
        this.subtrim = data().deepCopy(fields()[21].schema(), other.subtrim);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.transmission)) {
        this.transmission = data().deepCopy(fields()[22].schema(), other.transmission);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.trim)) {
        this.trim = data().deepCopy(fields()[23].schema(), other.trim);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.vehicle_condition)) {
        this.vehicle_condition = data().deepCopy(fields()[24].schema(), other.vehicle_condition);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.year)) {
        this.year = data().deepCopy(fields()[25].schema(), other.year);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.event_timestamp)) {
        this.event_timestamp = data().deepCopy(fields()[26].schema(), other.event_timestamp);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.image_count)) {
        this.image_count = data().deepCopy(fields()[27].schema(), other.image_count);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.initial_price)) {
        this.initial_price = data().deepCopy(fields()[28].schema(), other.initial_price);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.mileage)) {
        this.mileage = data().deepCopy(fields()[29].schema(), other.mileage);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.referrer)) {
        this.referrer = data().deepCopy(fields()[30].schema(), other.referrer);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.vin)) {
        this.vin = data().deepCopy(fields()[31].schema(), other.vin);
        fieldSetFlags()[31] = true;
      }
    }

    /** Gets the value of the 'event_type' field */
    public com.refactorlabs.cs378.sessions.EventType getEventType() {
      return event_type;
    }
    
    /** Sets the value of the 'event_type' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setEventType(com.refactorlabs.cs378.sessions.EventType value) {
      validate(fields()[0], value);
      this.event_type = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'event_type' field has been set */
    public boolean hasEventType() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'event_type' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearEventType() {
      event_type = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'event_subtype' field */
    public com.refactorlabs.cs378.sessions.EventSubtype getEventSubtype() {
      return event_subtype;
    }
    
    /** Sets the value of the 'event_subtype' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setEventSubtype(com.refactorlabs.cs378.sessions.EventSubtype value) {
      validate(fields()[1], value);
      this.event_subtype = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'event_subtype' field has been set */
    public boolean hasEventSubtype() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'event_subtype' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearEventSubtype() {
      event_subtype = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'body_style' field */
    public java.lang.CharSequence getBodyStyle() {
      return body_style;
    }
    
    /** Sets the value of the 'body_style' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setBodyStyle(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.body_style = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'body_style' field has been set */
    public boolean hasBodyStyle() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'body_style' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearBodyStyle() {
      body_style = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'cab_style' field */
    public java.lang.CharSequence getCabStyle() {
      return cab_style;
    }
    
    /** Sets the value of the 'cab_style' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setCabStyle(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.cab_style = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'cab_style' field has been set */
    public boolean hasCabStyle() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'cab_style' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearCabStyle() {
      cab_style = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'carfax_one_owner' field */
    public java.lang.CharSequence getCarfaxOneOwner() {
      return carfax_one_owner;
    }
    
    /** Sets the value of the 'carfax_one_owner' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setCarfaxOneOwner(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.carfax_one_owner = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'carfax_one_owner' field has been set */
    public boolean hasCarfaxOneOwner() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'carfax_one_owner' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearCarfaxOneOwner() {
      carfax_one_owner = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'city' field */
    public java.lang.CharSequence getCity() {
      return city;
    }
    
    /** Sets the value of the 'city' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setCity(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.city = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'city' field has been set */
    public boolean hasCity() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'city' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearCity() {
      city = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'drive_type' field */
    public java.lang.CharSequence getDriveType() {
      return drive_type;
    }
    
    /** Sets the value of the 'drive_type' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setDriveType(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.drive_type = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'drive_type' field has been set */
    public boolean hasDriveType() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'drive_type' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearDriveType() {
      drive_type = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'engine' field */
    public java.lang.CharSequence getEngine() {
      return engine;
    }
    
    /** Sets the value of the 'engine' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setEngine(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.engine = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'engine' field has been set */
    public boolean hasEngine() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'engine' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearEngine() {
      engine = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'engine_displacement' field */
    public java.lang.CharSequence getEngineDisplacement() {
      return engine_displacement;
    }
    
    /** Sets the value of the 'engine_displacement' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setEngineDisplacement(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.engine_displacement = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'engine_displacement' field has been set */
    public boolean hasEngineDisplacement() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'engine_displacement' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearEngineDisplacement() {
      engine_displacement = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'exterior_color' field */
    public java.lang.CharSequence getExteriorColor() {
      return exterior_color;
    }
    
    /** Sets the value of the 'exterior_color' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setExteriorColor(java.lang.CharSequence value) {
      validate(fields()[9], value);
      this.exterior_color = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'exterior_color' field has been set */
    public boolean hasExteriorColor() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'exterior_color' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearExteriorColor() {
      exterior_color = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /** Gets the value of the 'features' field */
    public java.util.List<java.lang.CharSequence> getFeatures() {
      return features;
    }
    
    /** Sets the value of the 'features' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setFeatures(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[10], value);
      this.features = value;
      fieldSetFlags()[10] = true;
      return this; 
    }
    
    /** Checks whether the 'features' field has been set */
    public boolean hasFeatures() {
      return fieldSetFlags()[10];
    }
    
    /** Clears the value of the 'features' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearFeatures() {
      features = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /** Gets the value of the 'fuel' field */
    public java.lang.CharSequence getFuel() {
      return fuel;
    }
    
    /** Sets the value of the 'fuel' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setFuel(java.lang.CharSequence value) {
      validate(fields()[11], value);
      this.fuel = value;
      fieldSetFlags()[11] = true;
      return this; 
    }
    
    /** Checks whether the 'fuel' field has been set */
    public boolean hasFuel() {
      return fieldSetFlags()[11];
    }
    
    /** Clears the value of the 'fuel' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearFuel() {
      fuel = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /** Gets the value of the 'initial_carfax_free_report' field */
    public java.lang.CharSequence getInitialCarfaxFreeReport() {
      return initial_carfax_free_report;
    }
    
    /** Sets the value of the 'initial_carfax_free_report' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setInitialCarfaxFreeReport(java.lang.CharSequence value) {
      validate(fields()[12], value);
      this.initial_carfax_free_report = value;
      fieldSetFlags()[12] = true;
      return this; 
    }
    
    /** Checks whether the 'initial_carfax_free_report' field has been set */
    public boolean hasInitialCarfaxFreeReport() {
      return fieldSetFlags()[12];
    }
    
    /** Clears the value of the 'initial_carfax_free_report' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearInitialCarfaxFreeReport() {
      initial_carfax_free_report = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /** Gets the value of the 'initial_cpo' field */
    public java.lang.CharSequence getInitialCpo() {
      return initial_cpo;
    }
    
    /** Sets the value of the 'initial_cpo' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setInitialCpo(java.lang.CharSequence value) {
      validate(fields()[13], value);
      this.initial_cpo = value;
      fieldSetFlags()[13] = true;
      return this; 
    }
    
    /** Checks whether the 'initial_cpo' field has been set */
    public boolean hasInitialCpo() {
      return fieldSetFlags()[13];
    }
    
    /** Clears the value of the 'initial_cpo' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearInitialCpo() {
      initial_cpo = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /** Gets the value of the 'interior_color' field */
    public java.lang.CharSequence getInteriorColor() {
      return interior_color;
    }
    
    /** Sets the value of the 'interior_color' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setInteriorColor(java.lang.CharSequence value) {
      validate(fields()[14], value);
      this.interior_color = value;
      fieldSetFlags()[14] = true;
      return this; 
    }
    
    /** Checks whether the 'interior_color' field has been set */
    public boolean hasInteriorColor() {
      return fieldSetFlags()[14];
    }
    
    /** Clears the value of the 'interior_color' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearInteriorColor() {
      interior_color = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /** Gets the value of the 'make' field */
    public java.lang.CharSequence getMake() {
      return make;
    }
    
    /** Sets the value of the 'make' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setMake(java.lang.CharSequence value) {
      validate(fields()[15], value);
      this.make = value;
      fieldSetFlags()[15] = true;
      return this; 
    }
    
    /** Checks whether the 'make' field has been set */
    public boolean hasMake() {
      return fieldSetFlags()[15];
    }
    
    /** Clears the value of the 'make' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearMake() {
      make = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /** Gets the value of the 'model' field */
    public java.lang.CharSequence getModel() {
      return model;
    }
    
    /** Sets the value of the 'model' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setModel(java.lang.CharSequence value) {
      validate(fields()[16], value);
      this.model = value;
      fieldSetFlags()[16] = true;
      return this; 
    }
    
    /** Checks whether the 'model' field has been set */
    public boolean hasModel() {
      return fieldSetFlags()[16];
    }
    
    /** Clears the value of the 'model' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearModel() {
      model = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /** Gets the value of the 'mpg' field */
    public java.lang.CharSequence getMpg() {
      return mpg;
    }
    
    /** Sets the value of the 'mpg' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setMpg(java.lang.CharSequence value) {
      validate(fields()[17], value);
      this.mpg = value;
      fieldSetFlags()[17] = true;
      return this; 
    }
    
    /** Checks whether the 'mpg' field has been set */
    public boolean hasMpg() {
      return fieldSetFlags()[17];
    }
    
    /** Clears the value of the 'mpg' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearMpg() {
      mpg = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /** Gets the value of the 'page' field */
    public java.lang.CharSequence getPage() {
      return page;
    }
    
    /** Sets the value of the 'page' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setPage(java.lang.CharSequence value) {
      validate(fields()[18], value);
      this.page = value;
      fieldSetFlags()[18] = true;
      return this; 
    }
    
    /** Checks whether the 'page' field has been set */
    public boolean hasPage() {
      return fieldSetFlags()[18];
    }
    
    /** Clears the value of the 'page' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearPage() {
      page = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /** Gets the value of the 'referring_domain' field */
    public java.lang.CharSequence getReferringDomain() {
      return referring_domain;
    }
    
    /** Sets the value of the 'referring_domain' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setReferringDomain(java.lang.CharSequence value) {
      validate(fields()[19], value);
      this.referring_domain = value;
      fieldSetFlags()[19] = true;
      return this; 
    }
    
    /** Checks whether the 'referring_domain' field has been set */
    public boolean hasReferringDomain() {
      return fieldSetFlags()[19];
    }
    
    /** Clears the value of the 'referring_domain' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearReferringDomain() {
      referring_domain = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /** Gets the value of the 'region' field */
    public java.lang.CharSequence getRegion() {
      return region;
    }
    
    /** Sets the value of the 'region' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setRegion(java.lang.CharSequence value) {
      validate(fields()[20], value);
      this.region = value;
      fieldSetFlags()[20] = true;
      return this; 
    }
    
    /** Checks whether the 'region' field has been set */
    public boolean hasRegion() {
      return fieldSetFlags()[20];
    }
    
    /** Clears the value of the 'region' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearRegion() {
      region = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /** Gets the value of the 'subtrim' field */
    public java.lang.CharSequence getSubtrim() {
      return subtrim;
    }
    
    /** Sets the value of the 'subtrim' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setSubtrim(java.lang.CharSequence value) {
      validate(fields()[21], value);
      this.subtrim = value;
      fieldSetFlags()[21] = true;
      return this; 
    }
    
    /** Checks whether the 'subtrim' field has been set */
    public boolean hasSubtrim() {
      return fieldSetFlags()[21];
    }
    
    /** Clears the value of the 'subtrim' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearSubtrim() {
      subtrim = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /** Gets the value of the 'transmission' field */
    public java.lang.CharSequence getTransmission() {
      return transmission;
    }
    
    /** Sets the value of the 'transmission' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setTransmission(java.lang.CharSequence value) {
      validate(fields()[22], value);
      this.transmission = value;
      fieldSetFlags()[22] = true;
      return this; 
    }
    
    /** Checks whether the 'transmission' field has been set */
    public boolean hasTransmission() {
      return fieldSetFlags()[22];
    }
    
    /** Clears the value of the 'transmission' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearTransmission() {
      transmission = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /** Gets the value of the 'trim' field */
    public java.lang.CharSequence getTrim() {
      return trim;
    }
    
    /** Sets the value of the 'trim' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setTrim(java.lang.CharSequence value) {
      validate(fields()[23], value);
      this.trim = value;
      fieldSetFlags()[23] = true;
      return this; 
    }
    
    /** Checks whether the 'trim' field has been set */
    public boolean hasTrim() {
      return fieldSetFlags()[23];
    }
    
    /** Clears the value of the 'trim' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearTrim() {
      trim = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /** Gets the value of the 'vehicle_condition' field */
    public java.lang.CharSequence getVehicleCondition() {
      return vehicle_condition;
    }
    
    /** Sets the value of the 'vehicle_condition' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setVehicleCondition(java.lang.CharSequence value) {
      validate(fields()[24], value);
      this.vehicle_condition = value;
      fieldSetFlags()[24] = true;
      return this; 
    }
    
    /** Checks whether the 'vehicle_condition' field has been set */
    public boolean hasVehicleCondition() {
      return fieldSetFlags()[24];
    }
    
    /** Clears the value of the 'vehicle_condition' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearVehicleCondition() {
      vehicle_condition = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /** Gets the value of the 'year' field */
    public java.lang.CharSequence getYear() {
      return year;
    }
    
    /** Sets the value of the 'year' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setYear(java.lang.CharSequence value) {
      validate(fields()[25], value);
      this.year = value;
      fieldSetFlags()[25] = true;
      return this; 
    }
    
    /** Checks whether the 'year' field has been set */
    public boolean hasYear() {
      return fieldSetFlags()[25];
    }
    
    /** Clears the value of the 'year' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearYear() {
      year = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /** Gets the value of the 'event_timestamp' field */
    public java.lang.CharSequence getEventTimestamp() {
      return event_timestamp;
    }
    
    /** Sets the value of the 'event_timestamp' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setEventTimestamp(java.lang.CharSequence value) {
      validate(fields()[26], value);
      this.event_timestamp = value;
      fieldSetFlags()[26] = true;
      return this; 
    }
    
    /** Checks whether the 'event_timestamp' field has been set */
    public boolean hasEventTimestamp() {
      return fieldSetFlags()[26];
    }
    
    /** Clears the value of the 'event_timestamp' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearEventTimestamp() {
      event_timestamp = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /** Gets the value of the 'image_count' field */
    public java.lang.CharSequence getImageCount() {
      return image_count;
    }
    
    /** Sets the value of the 'image_count' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setImageCount(java.lang.CharSequence value) {
      validate(fields()[27], value);
      this.image_count = value;
      fieldSetFlags()[27] = true;
      return this; 
    }
    
    /** Checks whether the 'image_count' field has been set */
    public boolean hasImageCount() {
      return fieldSetFlags()[27];
    }
    
    /** Clears the value of the 'image_count' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearImageCount() {
      image_count = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /** Gets the value of the 'initial_price' field */
    public java.lang.CharSequence getInitialPrice() {
      return initial_price;
    }
    
    /** Sets the value of the 'initial_price' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setInitialPrice(java.lang.CharSequence value) {
      validate(fields()[28], value);
      this.initial_price = value;
      fieldSetFlags()[28] = true;
      return this; 
    }
    
    /** Checks whether the 'initial_price' field has been set */
    public boolean hasInitialPrice() {
      return fieldSetFlags()[28];
    }
    
    /** Clears the value of the 'initial_price' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearInitialPrice() {
      initial_price = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /** Gets the value of the 'mileage' field */
    public java.lang.CharSequence getMileage() {
      return mileage;
    }
    
    /** Sets the value of the 'mileage' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setMileage(java.lang.CharSequence value) {
      validate(fields()[29], value);
      this.mileage = value;
      fieldSetFlags()[29] = true;
      return this; 
    }
    
    /** Checks whether the 'mileage' field has been set */
    public boolean hasMileage() {
      return fieldSetFlags()[29];
    }
    
    /** Clears the value of the 'mileage' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearMileage() {
      mileage = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /** Gets the value of the 'referrer' field */
    public java.lang.CharSequence getReferrer() {
      return referrer;
    }
    
    /** Sets the value of the 'referrer' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setReferrer(java.lang.CharSequence value) {
      validate(fields()[30], value);
      this.referrer = value;
      fieldSetFlags()[30] = true;
      return this; 
    }
    
    /** Checks whether the 'referrer' field has been set */
    public boolean hasReferrer() {
      return fieldSetFlags()[30];
    }
    
    /** Clears the value of the 'referrer' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearReferrer() {
      referrer = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /** Gets the value of the 'vin' field */
    public java.lang.CharSequence getVin() {
      return vin;
    }
    
    /** Sets the value of the 'vin' field */
    public com.refactorlabs.cs378.sessions.Event.Builder setVin(java.lang.CharSequence value) {
      validate(fields()[31], value);
      this.vin = value;
      fieldSetFlags()[31] = true;
      return this; 
    }
    
    /** Checks whether the 'vin' field has been set */
    public boolean hasVin() {
      return fieldSetFlags()[31];
    }
    
    /** Clears the value of the 'vin' field */
    public com.refactorlabs.cs378.sessions.Event.Builder clearVin() {
      vin = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    @Override
    public Event build() {
      try {
        Event record = new Event();
        record.event_type = fieldSetFlags()[0] ? this.event_type : (com.refactorlabs.cs378.sessions.EventType) defaultValue(fields()[0]);
        record.event_subtype = fieldSetFlags()[1] ? this.event_subtype : (com.refactorlabs.cs378.sessions.EventSubtype) defaultValue(fields()[1]);
        record.body_style = fieldSetFlags()[2] ? this.body_style : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.cab_style = fieldSetFlags()[3] ? this.cab_style : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.carfax_one_owner = fieldSetFlags()[4] ? this.carfax_one_owner : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.city = fieldSetFlags()[5] ? this.city : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.drive_type = fieldSetFlags()[6] ? this.drive_type : (java.lang.CharSequence) defaultValue(fields()[6]);
        record.engine = fieldSetFlags()[7] ? this.engine : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.engine_displacement = fieldSetFlags()[8] ? this.engine_displacement : (java.lang.CharSequence) defaultValue(fields()[8]);
        record.exterior_color = fieldSetFlags()[9] ? this.exterior_color : (java.lang.CharSequence) defaultValue(fields()[9]);
        record.features = fieldSetFlags()[10] ? this.features : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[10]);
        record.fuel = fieldSetFlags()[11] ? this.fuel : (java.lang.CharSequence) defaultValue(fields()[11]);
        record.initial_carfax_free_report = fieldSetFlags()[12] ? this.initial_carfax_free_report : (java.lang.CharSequence) defaultValue(fields()[12]);
        record.initial_cpo = fieldSetFlags()[13] ? this.initial_cpo : (java.lang.CharSequence) defaultValue(fields()[13]);
        record.interior_color = fieldSetFlags()[14] ? this.interior_color : (java.lang.CharSequence) defaultValue(fields()[14]);
        record.make = fieldSetFlags()[15] ? this.make : (java.lang.CharSequence) defaultValue(fields()[15]);
        record.model = fieldSetFlags()[16] ? this.model : (java.lang.CharSequence) defaultValue(fields()[16]);
        record.mpg = fieldSetFlags()[17] ? this.mpg : (java.lang.CharSequence) defaultValue(fields()[17]);
        record.page = fieldSetFlags()[18] ? this.page : (java.lang.CharSequence) defaultValue(fields()[18]);
        record.referring_domain = fieldSetFlags()[19] ? this.referring_domain : (java.lang.CharSequence) defaultValue(fields()[19]);
        record.region = fieldSetFlags()[20] ? this.region : (java.lang.CharSequence) defaultValue(fields()[20]);
        record.subtrim = fieldSetFlags()[21] ? this.subtrim : (java.lang.CharSequence) defaultValue(fields()[21]);
        record.transmission = fieldSetFlags()[22] ? this.transmission : (java.lang.CharSequence) defaultValue(fields()[22]);
        record.trim = fieldSetFlags()[23] ? this.trim : (java.lang.CharSequence) defaultValue(fields()[23]);
        record.vehicle_condition = fieldSetFlags()[24] ? this.vehicle_condition : (java.lang.CharSequence) defaultValue(fields()[24]);
        record.year = fieldSetFlags()[25] ? this.year : (java.lang.CharSequence) defaultValue(fields()[25]);
        record.event_timestamp = fieldSetFlags()[26] ? this.event_timestamp : (java.lang.CharSequence) defaultValue(fields()[26]);
        record.image_count = fieldSetFlags()[27] ? this.image_count : (java.lang.CharSequence) defaultValue(fields()[27]);
        record.initial_price = fieldSetFlags()[28] ? this.initial_price : (java.lang.CharSequence) defaultValue(fields()[28]);
        record.mileage = fieldSetFlags()[29] ? this.mileage : (java.lang.CharSequence) defaultValue(fields()[29]);
        record.referrer = fieldSetFlags()[30] ? this.referrer : (java.lang.CharSequence) defaultValue(fields()[30]);
        record.vin = fieldSetFlags()[31] ? this.vin : (java.lang.CharSequence) defaultValue(fields()[31]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
